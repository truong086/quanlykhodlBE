// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using quanlykhodl.Models;

#nullable disable

namespace quanlykhodl.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20250212140632_updatecode")]
    partial class updatecode
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("quanlykhodl.Models.accounts", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("action")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("address")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.Property<string>("publicid")
                        .HasColumnType("longtext");

                    b.Property<int?>("role_id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("username")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("role_id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("quanlykhodl.Models.areas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("account_id")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("floor")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("publicId")
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.Property<int>("storage")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("account_id");

                    b.HasIndex("floor");

                    b.ToTable("areas");
                });

            modelBuilder.Entity("quanlykhodl.Models.categories", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("account_id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("public_id")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("account_id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("quanlykhodl.Models.Codelocation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("id_helf")
                        .HasColumnType("int");

                    b.Property<int>("location")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("id_helf");

                    b.ToTable("codelocations");
                });

            modelBuilder.Entity("quanlykhodl.Models.Conversation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("lastmessageid")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("user1id")
                        .HasColumnType("int");

                    b.Property<int>("user2id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("lastmessageid");

                    b.HasIndex("user1id");

                    b.HasIndex("user2id");

                    b.ToTable("conversations");
                });

            modelBuilder.Entity("quanlykhodl.Models.Deliverynote", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("accountmap")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("deliveryaddress")
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<bool>("isRetailcustomers")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("isaction")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ispack")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("ispercentage")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("price")
                        .HasColumnType("double");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int?>("retailcustomers")
                        .HasColumnType("int");

                    b.Property<int?>("tax")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.Property<double>("total")
                        .HasColumnType("double");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("accountmap");

                    b.HasIndex("retailcustomers");

                    b.ToTable("deliverynotes");
                });

            modelBuilder.Entity("quanlykhodl.Models.DeliverynotePrepareToExport", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("deliverynotesid")
                        .HasColumnType("int");

                    b.Property<int?>("id_delivenote")
                        .HasColumnType("int");

                    b.Property<int?>("id_preparetoexport")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("deliverynotesid");

                    b.HasIndex("id_preparetoexport");

                    b.ToTable("deliverynotepreparetoes");
                });

            modelBuilder.Entity("quanlykhodl.Models.Floor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("account_id")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("publicid")
                        .HasColumnType("longtext");

                    b.Property<int?>("quantityarea")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("warehouse")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("account_id");

                    b.HasIndex("warehouse");

                    b.ToTable("floors");
                });

            modelBuilder.Entity("quanlykhodl.Models.ImageProduct", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("link")
                        .HasColumnType("longtext");

                    b.Property<int?>("productmap")
                        .HasColumnType("int");

                    b.Property<string>("public_id")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("productmap");

                    b.ToTable("imageproducts");
                });

            modelBuilder.Entity("quanlykhodl.Models.imagestatusitem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("publicid")
                        .HasColumnType("longtext");

                    b.Property<int?>("statusitemmap")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("statusitemmap");

                    b.ToTable("imagestatusitems");
                });

            modelBuilder.Entity("quanlykhodl.Models.Importform", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("account_idmap")
                        .HasColumnType("int");

                    b.Property<int?>("actualquantity")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("deliveryaddress")
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<bool>("isaction")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("ispercentage")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("isproductnew")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("price")
                        .HasColumnType("double");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<int?>("tax")
                        .HasColumnType("int");

                    b.Property<string>("tite")
                        .HasColumnType("longtext");

                    b.Property<double>("total")
                        .HasColumnType("double");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("account_idmap");

                    b.ToTable("importforms");
                });

            modelBuilder.Entity("quanlykhodl.Models.Line", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("id_area")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<int>("quantityshelf")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("id_area");

                    b.ToTable("lines");
                });

            modelBuilder.Entity("quanlykhodl.Models.LocationException", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("id_shelf")
                        .HasColumnType("int");

                    b.Property<int?>("location")
                        .HasColumnType("int");

                    b.Property<int?>("max")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("id_shelf");

                    b.ToTable("locationexceptions");
                });

            modelBuilder.Entity("quanlykhodl.Models.Message", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<bool>("isread")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("publicid")
                        .HasColumnType("longtext");

                    b.Property<int?>("receiverid")
                        .HasColumnType("int");

                    b.Property<int?>("senderid")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("receiverid");

                    b.HasIndex("senderid");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("quanlykhodl.Models.OnlineUsers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("account_id")
                        .HasColumnType("int");

                    b.Property<string>("connectionid")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("isonline")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("account_id");

                    b.ToTable("onlineusersuser");
                });

            modelBuilder.Entity("quanlykhodl.Models.Plan", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Receiver")
                        .HasColumnType("int");

                    b.Property<int?>("area")
                        .HasColumnType("int");

                    b.Property<int?>("areaold")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<int?>("floor")
                        .HasColumnType("int");

                    b.Property<int?>("floor_idid")
                        .HasColumnType("int");

                    b.Property<int?>("floorold")
                        .HasColumnType("int");

                    b.Property<bool>("isconfirmation")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("isconsent")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("iswarehourse")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("localtionnew")
                        .HasColumnType("int");

                    b.Property<int?>("localtionold")
                        .HasColumnType("int");

                    b.Property<int?>("productlocation_map")
                        .HasColumnType("int");

                    b.Property<int?>("shelf")
                        .HasColumnType("int");

                    b.Property<int?>("shelfOld")
                        .HasColumnType("int");

                    b.Property<int?>("shelfidid")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("warehouse")
                        .HasColumnType("int");

                    b.Property<int?>("warehouse_idid")
                        .HasColumnType("int");

                    b.Property<int?>("warehouseold")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Receiver");

                    b.HasIndex("area");

                    b.HasIndex("floor_idid");

                    b.HasIndex("productlocation_map");

                    b.HasIndex("shelfidid");

                    b.HasIndex("warehouse_idid");

                    b.ToTable("plans");
                });

            modelBuilder.Entity("quanlykhodl.Models.PrepareToExport", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("account_id")
                        .HasColumnType("int");

                    b.Property<int?>("accountid")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("id_product")
                        .HasColumnType("int");

                    b.Property<bool>("ischeck")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("productid")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("accountid");

                    b.HasIndex("productid");

                    b.ToTable("PrepareToExport");
                });

            modelBuilder.Entity("quanlykhodl.Models.product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("account_map")
                        .HasColumnType("int");

                    b.Property<int?>("category_map")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("donvitinh")
                        .HasColumnType("longtext");

                    b.Property<double>("price")
                        .HasColumnType("double");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("star")
                        .HasColumnType("int");

                    b.Property<int?>("suppliers")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("account_map");

                    b.HasIndex("category_map");

                    b.HasIndex("suppliers");

                    b.ToTable("products1");
                });

            modelBuilder.Entity("quanlykhodl.Models.productDeliverynote", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("deliverynote")
                        .HasColumnType("int");

                    b.Property<int?>("location")
                        .HasColumnType("int");

                    b.Property<int?>("product_map")
                        .HasColumnType("int");

                    b.Property<int?>("productlocation_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int?>("shelf_id")
                        .HasColumnType("int");

                    b.Property<int?>("shelfsid")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("deliverynote");

                    b.HasIndex("product_map");

                    b.HasIndex("productlocation_id");

                    b.HasIndex("shelfsid");

                    b.ToTable("productdeliverynotes");
                });

            modelBuilder.Entity("quanlykhodl.Models.productImportform", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("importform")
                        .HasColumnType("int");

                    b.Property<bool>("isaction")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("location")
                        .HasColumnType("int");

                    b.Property<int?>("product")
                        .HasColumnType("int");

                    b.Property<int?>("productlocation_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int?>("shelf_id")
                        .HasColumnType("int");

                    b.Property<int?>("supplier")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("importform");

                    b.HasIndex("product");

                    b.HasIndex("productlocation_id");

                    b.HasIndex("shelf_id");

                    b.HasIndex("supplier");

                    b.ToTable("productimportforms");
                });

            modelBuilder.Entity("quanlykhodl.Models.productlocation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("codelocation")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("id_product")
                        .HasColumnType("int");

                    b.Property<int>("id_shelf")
                        .HasColumnType("int");

                    b.Property<bool>("isaction")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("location")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("id_product");

                    b.HasIndex("id_shelf");

                    b.ToTable("productlocations");
                });

            modelBuilder.Entity("quanlykhodl.Models.Retailcustomers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("retailcustomers");
                });

            modelBuilder.Entity("quanlykhodl.Models.role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("quanlykhodl.Models.Shelf", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("account")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<int?>("line")
                        .HasColumnType("int");

                    b.Property<int?>("max")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("publicid")
                        .HasColumnType("longtext");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("account");

                    b.HasIndex("line");

                    b.ToTable("shelfs");
                });

            modelBuilder.Entity("quanlykhodl.Models.StatusItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("icon")
                        .HasColumnType("longtext");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("warehousetransferstatus")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("warehousetransferstatus");

                    b.ToTable("statusitems");
                });

            modelBuilder.Entity("quanlykhodl.Models.Supplier", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("account_id")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.Property<string>("publicid")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("account_id");

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("quanlykhodl.Models.Token", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("account_id")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("account_id");

                    b.ToTable("tokens");
                });

            modelBuilder.Entity("quanlykhodl.Models.UserConversation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("conversationid")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("userconversationid")
                        .HasColumnType("int");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("conversationid");

                    b.HasIndex("userid");

                    b.ToTable("userconversations");
                });

            modelBuilder.Entity("quanlykhodl.Models.UserTokenApp", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("usertokenapps");
                });

            modelBuilder.Entity("quanlykhodl.Models.Warehouse", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("account_map")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("longtext");

                    b.Property<string>("city")
                        .HasColumnType("longtext");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<string>("country")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("district")
                        .HasColumnType("longtext");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<int?>("numberoffloors")
                        .HasColumnType("int");

                    b.Property<string>("publicid")
                        .HasColumnType("longtext");

                    b.Property<string>("street")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("account_map");

                    b.ToTable("warehouses");
                });

            modelBuilder.Entity("quanlykhodl.Models.Warehousetransferstatus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("createdat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cretoredit")
                        .HasColumnType("longtext");

                    b.Property<bool>("deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("plan")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("updatedat")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("plan");

                    b.ToTable("warehousetransferstatuses");
                });

            modelBuilder.Entity("quanlykhodl.Models.accounts", b =>
                {
                    b.HasOne("quanlykhodl.Models.role", "role")
                        .WithMany("account")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("role");
                });

            modelBuilder.Entity("quanlykhodl.Models.areas", b =>
                {
                    b.HasOne("quanlykhodl.Models.accounts", "account")
                        .WithMany("areas")
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Floor", "floor_id")
                        .WithMany("areas")
                        .HasForeignKey("floor")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("account");

                    b.Navigation("floor_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.categories", b =>
                {
                    b.HasOne("quanlykhodl.Models.accounts", "account")
                        .WithMany("categories")
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("account");
                });

            modelBuilder.Entity("quanlykhodl.Models.Codelocation", b =>
                {
                    b.HasOne("quanlykhodl.Models.Shelf", "shelf")
                        .WithMany("Codelocations")
                        .HasForeignKey("id_helf")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("shelf");
                });

            modelBuilder.Entity("quanlykhodl.Models.Conversation", b =>
                {
                    b.HasOne("quanlykhodl.Models.Message", "LastMessage")
                        .WithMany()
                        .HasForeignKey("lastmessageid")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("quanlykhodl.Models.accounts", "User1")
                        .WithMany()
                        .HasForeignKey("user1id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("quanlykhodl.Models.accounts", "User2")
                        .WithMany()
                        .HasForeignKey("user2id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LastMessage");

                    b.Navigation("User1");

                    b.Navigation("User2");
                });

            modelBuilder.Entity("quanlykhodl.Models.Deliverynote", b =>
                {
                    b.HasOne("quanlykhodl.Models.accounts", "account")
                        .WithMany("deliverynotes")
                        .HasForeignKey("accountmap")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Retailcustomers", "retailcustomers_id")
                        .WithMany("deliverynotes")
                        .HasForeignKey("retailcustomers")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("account");

                    b.Navigation("retailcustomers_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.DeliverynotePrepareToExport", b =>
                {
                    b.HasOne("quanlykhodl.Models.Deliverynote", "deliverynotes")
                        .WithMany()
                        .HasForeignKey("deliverynotesid");

                    b.HasOne("quanlykhodl.Models.PrepareToExport", "PreparetoExports")
                        .WithMany("DeliverynotePrepareToExports")
                        .HasForeignKey("id_preparetoexport")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PreparetoExports");

                    b.Navigation("deliverynotes");
                });

            modelBuilder.Entity("quanlykhodl.Models.Floor", b =>
                {
                    b.HasOne("quanlykhodl.Models.accounts", "accounts")
                        .WithMany("floors")
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Warehouse", "warehouse_id")
                        .WithMany("floors")
                        .HasForeignKey("warehouse")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("accounts");

                    b.Navigation("warehouse_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.ImageProduct", b =>
                {
                    b.HasOne("quanlykhodl.Models.product", "products_id")
                        .WithMany("imageProducts")
                        .HasForeignKey("productmap")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("products_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.imagestatusitem", b =>
                {
                    b.HasOne("quanlykhodl.Models.StatusItem", "statusItem_id")
                        .WithMany("imagestatusitems")
                        .HasForeignKey("statusitemmap")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("statusItem_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.Importform", b =>
                {
                    b.HasOne("quanlykhodl.Models.accounts", "account_id")
                        .WithMany("importforms")
                        .HasForeignKey("account_idmap")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("account_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.Line", b =>
                {
                    b.HasOne("quanlykhodl.Models.areas", "areasids")
                        .WithMany("lines")
                        .HasForeignKey("id_area")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("areasids");
                });

            modelBuilder.Entity("quanlykhodl.Models.LocationException", b =>
                {
                    b.HasOne("quanlykhodl.Models.Shelf", "shelf")
                        .WithMany("LocationExceptions")
                        .HasForeignKey("id_shelf")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("shelf");
                });

            modelBuilder.Entity("quanlykhodl.Models.Message", b =>
                {
                    b.HasOne("quanlykhodl.Models.accounts", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("receiverid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.accounts", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("senderid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("quanlykhodl.Models.OnlineUsers", b =>
                {
                    b.HasOne("quanlykhodl.Models.accounts", "account")
                        .WithMany("onlineUsers")
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("account");
                });

            modelBuilder.Entity("quanlykhodl.Models.Plan", b =>
                {
                    b.HasOne("quanlykhodl.Models.accounts", "Receiver_id")
                        .WithMany("plans")
                        .HasForeignKey("Receiver")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.areas", "area_id")
                        .WithMany("plans")
                        .HasForeignKey("area")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Floor", "floor_id")
                        .WithMany()
                        .HasForeignKey("floor_idid");

                    b.HasOne("quanlykhodl.Models.productlocation", "productidlocation")
                        .WithMany("plans")
                        .HasForeignKey("productlocation_map")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Shelf", "shelfid")
                        .WithMany()
                        .HasForeignKey("shelfidid");

                    b.HasOne("quanlykhodl.Models.Warehouse", "warehouse_id")
                        .WithMany()
                        .HasForeignKey("warehouse_idid");

                    b.Navigation("Receiver_id");

                    b.Navigation("area_id");

                    b.Navigation("floor_id");

                    b.Navigation("productidlocation");

                    b.Navigation("shelfid");

                    b.Navigation("warehouse_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.PrepareToExport", b =>
                {
                    b.HasOne("quanlykhodl.Models.accounts", "account")
                        .WithMany()
                        .HasForeignKey("accountid");

                    b.HasOne("quanlykhodl.Models.product", "product")
                        .WithMany()
                        .HasForeignKey("productid");

                    b.Navigation("account");

                    b.Navigation("product");
                });

            modelBuilder.Entity("quanlykhodl.Models.product", b =>
                {
                    b.HasOne("quanlykhodl.Models.accounts", "account")
                        .WithMany("products")
                        .HasForeignKey("account_map")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.categories", "categoryid123")
                        .WithMany("products")
                        .HasForeignKey("category_map")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Supplier", "supplier_id")
                        .WithMany("products")
                        .HasForeignKey("suppliers")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("account");

                    b.Navigation("categoryid123");

                    b.Navigation("supplier_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.productDeliverynote", b =>
                {
                    b.HasOne("quanlykhodl.Models.Deliverynote", "deliverynote_id1")
                        .WithMany("productDeliverynotes")
                        .HasForeignKey("deliverynote")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.product", "product")
                        .WithMany("productDeliverynotes")
                        .HasForeignKey("product_map")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.productlocation", "productlocations")
                        .WithMany("ProductDeliverynotes")
                        .HasForeignKey("productlocation_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Shelf", "shelfs")
                        .WithMany()
                        .HasForeignKey("shelfsid");

                    b.Navigation("deliverynote_id1");

                    b.Navigation("product");

                    b.Navigation("productlocations");

                    b.Navigation("shelfs");
                });

            modelBuilder.Entity("quanlykhodl.Models.productImportform", b =>
                {
                    b.HasOne("quanlykhodl.Models.Importform", "importform_id1")
                        .WithMany("productImportforms")
                        .HasForeignKey("importform")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.product", "products")
                        .WithMany("productImportforms")
                        .HasForeignKey("product")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.productlocation", "productlocations")
                        .WithMany("ProductImportforms")
                        .HasForeignKey("productlocation_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Shelf", "shelfs")
                        .WithMany("ProductImportforms")
                        .HasForeignKey("shelf_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Supplier", "supplier_id")
                        .WithMany("productimportforms")
                        .HasForeignKey("supplier")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("importform_id1");

                    b.Navigation("productlocations");

                    b.Navigation("products");

                    b.Navigation("shelfs");

                    b.Navigation("supplier_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.productlocation", b =>
                {
                    b.HasOne("quanlykhodl.Models.product", "products")
                        .WithMany("Productlocations")
                        .HasForeignKey("id_product")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("quanlykhodl.Models.Shelf", "shelfs")
                        .WithMany("Productlocations")
                        .HasForeignKey("id_shelf")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("products");

                    b.Navigation("shelfs");
                });

            modelBuilder.Entity("quanlykhodl.Models.Shelf", b =>
                {
                    b.HasOne("quanlykhodl.Models.accounts", "account_id")
                        .WithMany("shelfs")
                        .HasForeignKey("account")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Line", "line_id")
                        .WithMany("shelfs")
                        .HasForeignKey("line")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("account_id");

                    b.Navigation("line_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.StatusItem", b =>
                {
                    b.HasOne("quanlykhodl.Models.Warehousetransferstatus", "Warehousetransferstatus_id")
                        .WithMany("statusItems")
                        .HasForeignKey("warehousetransferstatus")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Warehousetransferstatus_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.Supplier", b =>
                {
                    b.HasOne("quanlykhodl.Models.accounts", "accounts")
                        .WithMany("suppliers")
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("accounts");
                });

            modelBuilder.Entity("quanlykhodl.Models.Token", b =>
                {
                    b.HasOne("quanlykhodl.Models.accounts", "account")
                        .WithMany("tokens")
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("account");
                });

            modelBuilder.Entity("quanlykhodl.Models.UserConversation", b =>
                {
                    b.HasOne("quanlykhodl.Models.Conversation", "Conversation")
                        .WithMany()
                        .HasForeignKey("conversationid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("quanlykhodl.Models.accounts", "User")
                        .WithMany()
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Conversation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("quanlykhodl.Models.Warehouse", b =>
                {
                    b.HasOne("quanlykhodl.Models.accounts", "account")
                        .WithMany("warehouses")
                        .HasForeignKey("account_map")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("account");
                });

            modelBuilder.Entity("quanlykhodl.Models.Warehousetransferstatus", b =>
                {
                    b.HasOne("quanlykhodl.Models.Plan", "plan_id")
                        .WithMany("warehousetransferstatuses")
                        .HasForeignKey("plan")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("plan_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.accounts", b =>
                {
                    b.Navigation("ReceivedMessages");

                    b.Navigation("SentMessages");

                    b.Navigation("areas");

                    b.Navigation("categories");

                    b.Navigation("deliverynotes");

                    b.Navigation("floors");

                    b.Navigation("importforms");

                    b.Navigation("onlineUsers");

                    b.Navigation("plans");

                    b.Navigation("products");

                    b.Navigation("shelfs");

                    b.Navigation("suppliers");

                    b.Navigation("tokens");

                    b.Navigation("warehouses");
                });

            modelBuilder.Entity("quanlykhodl.Models.areas", b =>
                {
                    b.Navigation("lines");

                    b.Navigation("plans");
                });

            modelBuilder.Entity("quanlykhodl.Models.categories", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("quanlykhodl.Models.Deliverynote", b =>
                {
                    b.Navigation("productDeliverynotes");
                });

            modelBuilder.Entity("quanlykhodl.Models.Floor", b =>
                {
                    b.Navigation("areas");
                });

            modelBuilder.Entity("quanlykhodl.Models.Importform", b =>
                {
                    b.Navigation("productImportforms");
                });

            modelBuilder.Entity("quanlykhodl.Models.Line", b =>
                {
                    b.Navigation("shelfs");
                });

            modelBuilder.Entity("quanlykhodl.Models.Plan", b =>
                {
                    b.Navigation("warehousetransferstatuses");
                });

            modelBuilder.Entity("quanlykhodl.Models.PrepareToExport", b =>
                {
                    b.Navigation("DeliverynotePrepareToExports");
                });

            modelBuilder.Entity("quanlykhodl.Models.product", b =>
                {
                    b.Navigation("Productlocations");

                    b.Navigation("imageProducts");

                    b.Navigation("productDeliverynotes");

                    b.Navigation("productImportforms");
                });

            modelBuilder.Entity("quanlykhodl.Models.productlocation", b =>
                {
                    b.Navigation("ProductDeliverynotes");

                    b.Navigation("ProductImportforms");

                    b.Navigation("plans");
                });

            modelBuilder.Entity("quanlykhodl.Models.Retailcustomers", b =>
                {
                    b.Navigation("deliverynotes");
                });

            modelBuilder.Entity("quanlykhodl.Models.role", b =>
                {
                    b.Navigation("account");
                });

            modelBuilder.Entity("quanlykhodl.Models.Shelf", b =>
                {
                    b.Navigation("Codelocations");

                    b.Navigation("LocationExceptions");

                    b.Navigation("ProductImportforms");

                    b.Navigation("Productlocations");
                });

            modelBuilder.Entity("quanlykhodl.Models.StatusItem", b =>
                {
                    b.Navigation("imagestatusitems");
                });

            modelBuilder.Entity("quanlykhodl.Models.Supplier", b =>
                {
                    b.Navigation("productimportforms");

                    b.Navigation("products");
                });

            modelBuilder.Entity("quanlykhodl.Models.Warehouse", b =>
                {
                    b.Navigation("floors");
                });

            modelBuilder.Entity("quanlykhodl.Models.Warehousetransferstatus", b =>
                {
                    b.Navigation("statusItems");
                });
#pragma warning restore 612, 618
        }
    }
}
