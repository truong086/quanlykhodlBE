// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using quanlykhodl.Models;

#nullable disable

namespace quanlykhodl.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("quanlykhodl.Models.Account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("publicid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("role_id")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("role_id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("quanlykhodl.Models.Area", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("account")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("floor")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("account");

                    b.HasIndex("floor");

                    b.ToTable("areas");
                });

            modelBuilder.Entity("quanlykhodl.Models.category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("account_Id")
                        .HasColumnType("int");

                    b.Property<int?>("accountid")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("public_id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("accountid");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("quanlykhodl.Models.Deliverynote", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("accountmap")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isRetailcustomers")
                        .HasColumnType("bit");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("accountmap");

                    b.ToTable("deliverynotes");
                });

            modelBuilder.Entity("quanlykhodl.Models.Floor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("quantityarea")
                        .HasColumnType("int");

                    b.Property<int?>("warehouse")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("warehouse");

                    b.ToTable("floors");
                });

            modelBuilder.Entity("quanlykhodl.Models.ImageProduct", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("productMap")
                        .HasColumnType("int");

                    b.Property<int?>("products_idid")
                        .HasColumnType("int");

                    b.Property<string>("public_id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("products_idid");

                    b.ToTable("ImageProduct");
                });

            modelBuilder.Entity("quanlykhodl.Models.imagestatusitem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("publicid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("statusItemMap")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("statusItemMap");

                    b.ToTable("imagestatusitems");
                });

            modelBuilder.Entity("quanlykhodl.Models.Importform", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("account_idMap")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isProductNew")
                        .HasColumnType("bit");

                    b.Property<string>("nameProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<string>("publicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<int?>("supplier")
                        .HasColumnType("int");

                    b.Property<string>("tite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("account_idMap");

                    b.HasIndex("supplier");

                    b.ToTable("importforms");
                });

            modelBuilder.Entity("quanlykhodl.Models.Notification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("isConfirmation")
                        .HasColumnType("bit");

                    b.Property<bool>("isConsent")
                        .HasColumnType("bit");

                    b.Property<int?>("plan_map")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("plan_map");

                    b.ToTable("notifications");
                });

            modelBuilder.Entity("quanlykhodl.Models.Plan", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Receiver")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("area")
                        .HasColumnType("int");

                    b.Property<int?>("areaidid")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("floor")
                        .HasColumnType("int");

                    b.Property<int?>("floor_idid")
                        .HasColumnType("int");

                    b.Property<string>("localtionnew")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("product_map")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("warehouse")
                        .HasColumnType("int");

                    b.Property<int?>("warehouse_idid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Receiver");

                    b.HasIndex("areaidid");

                    b.HasIndex("floor_idid");

                    b.HasIndex("product_map");

                    b.HasIndex("warehouse_idid");

                    b.ToTable("plans");
                });

            modelBuilder.Entity("quanlykhodl.Models.product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("DonViTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("account_map")
                        .HasColumnType("int");

                    b.Property<int?>("area_map")
                        .HasColumnType("int");

                    b.Property<int?>("category_map")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("floor_map")
                        .HasColumnType("int");

                    b.Property<int>("location")
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("star")
                        .HasColumnType("int");

                    b.Property<int?>("suppliers")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("account_map");

                    b.HasIndex("area_map");

                    b.HasIndex("category_map");

                    b.HasIndex("floor_map");

                    b.HasIndex("suppliers");

                    b.ToTable("products1");
                });

            modelBuilder.Entity("quanlykhodl.Models.productDeliverynote", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("deliverynote")
                        .HasColumnType("int");

                    b.Property<int?>("product_map")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("deliverynote");

                    b.HasIndex("product_map");

                    b.ToTable("productDeliverynotes");
                });

            modelBuilder.Entity("quanlykhodl.Models.productImportform", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("importform")
                        .HasColumnType("int");

                    b.Property<int?>("product")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("importform");

                    b.HasIndex("product");

                    b.ToTable("productImportforms");
                });

            modelBuilder.Entity("quanlykhodl.Models.Retailcustomers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("deliverynote")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("deliverynote");

                    b.ToTable("Retailcustomers");
                });

            modelBuilder.Entity("quanlykhodl.Models.role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("quanlykhodl.Models.StatusItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("warehousetransferstatus")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("warehousetransferstatus");

                    b.ToTable("statusItems");
                });

            modelBuilder.Entity("quanlykhodl.Models.Supplier", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("quanlykhodl.Models.Token", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("account_id")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("account_id");

                    b.ToTable("tokens");
                });

            modelBuilder.Entity("quanlykhodl.Models.Warehouse", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Numberoffloors")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("account_map")
                        .HasColumnType("int");

                    b.Property<int?>("accountid")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("accountid");

                    b.ToTable("warehouses");
                });

            modelBuilder.Entity("quanlykhodl.Models.Warehousetransferstatus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CretorEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("plan")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("plan");

                    b.ToTable("warehousetransferstatuses");
                });

            modelBuilder.Entity("quanlykhodl.Models.Account", b =>
                {
                    b.HasOne("quanlykhodl.Models.role", "role")
                        .WithMany("account")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("role");
                });

            modelBuilder.Entity("quanlykhodl.Models.Area", b =>
                {
                    b.HasOne("quanlykhodl.Models.Account", "account_id")
                        .WithMany("areas")
                        .HasForeignKey("account")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Floor", "floor_id")
                        .WithMany("areas")
                        .HasForeignKey("floor")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("account_id");

                    b.Navigation("floor_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.category", b =>
                {
                    b.HasOne("quanlykhodl.Models.Account", "account")
                        .WithMany()
                        .HasForeignKey("accountid");

                    b.Navigation("account");
                });

            modelBuilder.Entity("quanlykhodl.Models.Deliverynote", b =>
                {
                    b.HasOne("quanlykhodl.Models.Account", "account")
                        .WithMany("deliverynotes")
                        .HasForeignKey("accountmap")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("account");
                });

            modelBuilder.Entity("quanlykhodl.Models.Floor", b =>
                {
                    b.HasOne("quanlykhodl.Models.Warehouse", "warehouse_id")
                        .WithMany("floors")
                        .HasForeignKey("warehouse")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("warehouse_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.ImageProduct", b =>
                {
                    b.HasOne("quanlykhodl.Models.product", "products_id")
                        .WithMany("imageProducts")
                        .HasForeignKey("products_idid");

                    b.Navigation("products_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.imagestatusitem", b =>
                {
                    b.HasOne("quanlykhodl.Models.StatusItem", "statusItem_id")
                        .WithMany("imagestatusitems")
                        .HasForeignKey("statusItemMap")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("statusItem_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.Importform", b =>
                {
                    b.HasOne("quanlykhodl.Models.Account", "account_id")
                        .WithMany("importforms")
                        .HasForeignKey("account_idMap")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Supplier", "supplier_id")
                        .WithMany("importforms")
                        .HasForeignKey("supplier")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("account_id");

                    b.Navigation("supplier_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.Notification", b =>
                {
                    b.HasOne("quanlykhodl.Models.Plan", "plan_id")
                        .WithMany("notifications")
                        .HasForeignKey("plan_map")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("plan_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.Plan", b =>
                {
                    b.HasOne("quanlykhodl.Models.Account", "Receiver_id")
                        .WithMany("plans")
                        .HasForeignKey("Receiver")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Area", "areaid")
                        .WithMany()
                        .HasForeignKey("areaidid");

                    b.HasOne("quanlykhodl.Models.Floor", "floor_id")
                        .WithMany()
                        .HasForeignKey("floor_idid");

                    b.HasOne("quanlykhodl.Models.product", "productid123")
                        .WithMany("plans")
                        .HasForeignKey("product_map")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Warehouse", "warehouse_id")
                        .WithMany()
                        .HasForeignKey("warehouse_idid");

                    b.Navigation("Receiver_id");

                    b.Navigation("areaid");

                    b.Navigation("floor_id");

                    b.Navigation("productid123");

                    b.Navigation("warehouse_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.product", b =>
                {
                    b.HasOne("quanlykhodl.Models.Account", "account")
                        .WithMany("products")
                        .HasForeignKey("account_map")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Area", "area_id")
                        .WithMany("products")
                        .HasForeignKey("area_map")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.category", "categoryid123")
                        .WithMany("products")
                        .HasForeignKey("category_map")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Floor", "floor_id1")
                        .WithMany("products")
                        .HasForeignKey("floor_map")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.Supplier", "supplier_id")
                        .WithMany("products")
                        .HasForeignKey("suppliers")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("account");

                    b.Navigation("area_id");

                    b.Navigation("categoryid123");

                    b.Navigation("floor_id1");

                    b.Navigation("supplier_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.productDeliverynote", b =>
                {
                    b.HasOne("quanlykhodl.Models.Deliverynote", "deliverynote_id1")
                        .WithMany("productDeliverynotes")
                        .HasForeignKey("deliverynote")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.product", "product")
                        .WithMany("productDeliverynotes")
                        .HasForeignKey("product_map")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("deliverynote_id1");

                    b.Navigation("product");
                });

            modelBuilder.Entity("quanlykhodl.Models.productImportform", b =>
                {
                    b.HasOne("quanlykhodl.Models.Importform", "importform_id1")
                        .WithMany("productImportforms")
                        .HasForeignKey("importform")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("quanlykhodl.Models.product", "products")
                        .WithMany("productImportforms")
                        .HasForeignKey("product")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("importform_id1");

                    b.Navigation("products");
                });

            modelBuilder.Entity("quanlykhodl.Models.Retailcustomers", b =>
                {
                    b.HasOne("quanlykhodl.Models.Deliverynote", "deliverynote_id1")
                        .WithMany("retailcustomers")
                        .HasForeignKey("deliverynote")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("deliverynote_id1");
                });

            modelBuilder.Entity("quanlykhodl.Models.StatusItem", b =>
                {
                    b.HasOne("quanlykhodl.Models.Warehousetransferstatus", "Warehousetransferstatus_id")
                        .WithMany("statusItems")
                        .HasForeignKey("warehousetransferstatus")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Warehousetransferstatus_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.Token", b =>
                {
                    b.HasOne("quanlykhodl.Models.Account", "account")
                        .WithMany("tokens")
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("account");
                });

            modelBuilder.Entity("quanlykhodl.Models.Warehouse", b =>
                {
                    b.HasOne("quanlykhodl.Models.Account", "account")
                        .WithMany()
                        .HasForeignKey("accountid");

                    b.Navigation("account");
                });

            modelBuilder.Entity("quanlykhodl.Models.Warehousetransferstatus", b =>
                {
                    b.HasOne("quanlykhodl.Models.Plan", "plan_id")
                        .WithMany("warehousetransferstatuses")
                        .HasForeignKey("plan")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("plan_id");
                });

            modelBuilder.Entity("quanlykhodl.Models.Account", b =>
                {
                    b.Navigation("areas");

                    b.Navigation("deliverynotes");

                    b.Navigation("importforms");

                    b.Navigation("plans");

                    b.Navigation("products");

                    b.Navigation("tokens");
                });

            modelBuilder.Entity("quanlykhodl.Models.Area", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("quanlykhodl.Models.category", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("quanlykhodl.Models.Deliverynote", b =>
                {
                    b.Navigation("productDeliverynotes");

                    b.Navigation("retailcustomers");
                });

            modelBuilder.Entity("quanlykhodl.Models.Floor", b =>
                {
                    b.Navigation("areas");

                    b.Navigation("products");
                });

            modelBuilder.Entity("quanlykhodl.Models.Importform", b =>
                {
                    b.Navigation("productImportforms");
                });

            modelBuilder.Entity("quanlykhodl.Models.Plan", b =>
                {
                    b.Navigation("notifications");

                    b.Navigation("warehousetransferstatuses");
                });

            modelBuilder.Entity("quanlykhodl.Models.product", b =>
                {
                    b.Navigation("imageProducts");

                    b.Navigation("plans");

                    b.Navigation("productDeliverynotes");

                    b.Navigation("productImportforms");
                });

            modelBuilder.Entity("quanlykhodl.Models.role", b =>
                {
                    b.Navigation("account");
                });

            modelBuilder.Entity("quanlykhodl.Models.StatusItem", b =>
                {
                    b.Navigation("imagestatusitems");
                });

            modelBuilder.Entity("quanlykhodl.Models.Supplier", b =>
                {
                    b.Navigation("importforms");

                    b.Navigation("products");
                });

            modelBuilder.Entity("quanlykhodl.Models.Warehouse", b =>
                {
                    b.Navigation("floors");
                });

            modelBuilder.Entity("quanlykhodl.Models.Warehousetransferstatus", b =>
                {
                    b.Navigation("statusItems");
                });
#pragma warning restore 612, 618
        }
    }
}
